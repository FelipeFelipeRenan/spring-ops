version: '3.8'
services:
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_DB: orderdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mynetwork

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - mynetwork

  localstack:
    image: localstack/localstack
    container_name: localstack
    ports:
      - "4566:4566"
    environment:
      - SERVICES=dynamodb
      - DEFAULT_REGION=us-east-1
    volumes:
      - localstack_data:/var/lib/localstack
    networks:
      - mynetwork

  order-service:
    build:
      context: order-service/
      dockerfile: Dockerfile
    container_name: order-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/orderdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - AWS_DYNAMODB_ENDPOINT=http://localstack:4566
      - AWS_REGION=us-east-1
    ports:
      - "8081:8080"
    depends_on:
      - postgres
      - rabbitmq
      - localstack
    networks:
      - mynetwork

volumes:
  postgres_data:
  rabbitmq_data:
  localstack_data:

networks:
  mynetwork:
